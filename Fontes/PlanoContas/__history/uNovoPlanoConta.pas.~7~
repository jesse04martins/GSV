unit uNovoPlanoConta;

interface

uses System.SysUtils, System.Classes, View.Operacoes.interfaces, Model.PlanoContas, Dao.PlanoContas,
     dbSQL.Interfaces;

type
  TNovoPlanoConta = class(TInterfacedObject, iViewOperacao<TModelPlanoContas>)
  private
    FDB_SQLCommand: iDB_SQLCommand;
    FModel : TModelPlanoContas;
  public
    constructor Create(ADB_SQLCommand : iDB_SQLCommand);
    destructor Destroy; override;
    procedure Executar(value : TModelPlanoContas);
    function ObterObjeto : TModelPlanoContas;
  end;

implementation

{ TNovoPlanoConta }

constructor TNovoPlanoConta.Create(ADB_SQLCommand: iDB_SQLCommand);
begin
   FDB_SQLCommand := ADB_SQLCommand;
   FModel := TModelPlanoContas.Create;
end;

destructor TNovoPlanoConta.Destroy;
begin
   FreeAndNil(FModel);
   inherited;
end;

procedure TNovoPlanoConta.Executar(value: TModelPlanoContas);
begin
   try
      TDaoPlanoConta.Create(FDB_SQLCommand.GetOwner, FDB_SQLCommand).Inserir(value);
   except on e : Exception do
       begin
          raise Exception.Create(e.Message);
       end;
   end;
end;

function TNovoPlanoConta.ObterObjeto: TModelPlanoContas;
begin
   Result := FModel;
end;

end.
