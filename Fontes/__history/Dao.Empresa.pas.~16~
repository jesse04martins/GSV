unit Dao.Empresa;

interface

uses System.SysUtils, System.classes, Dao.Interfaces, Model.Empresa, dbSQL.Interfaces, Data.DB;

type
   TDaoEmpresa = class(TInterfacedObject, iDao<TModelEmpresa>)
   private
    FdbCommand : iDB_SQLCommand;
    function ExecuteCommand(pCriterio : string) : TDataSet;
   public
    constructor Create(AOwner: TComponent; ADB_SQLCommand : iDB_SQLCommand);
    function Listar(pEntidade : TModelEmpresa) : TDataSet;
    procedure Inserir(pEntidade : TModelEmpresa);
    procedure Alterar(pEntidade : TModelEmpresa);
    procedure Excluir(pId : integer);

   end;
implementation

{ TDaoEmpresa }

constructor TDaoEmpresa.Create(AOwner: TComponent; ADB_SQLCommand: iDB_SQLCommand);
begin
   FdbCommand := ADB_SQLCommand;
end;


function TDaoEmpresa.ExecuteCommand(pCriterio: string): TDataSet;
begin
   try
      Result := FdbCommand.ExecutarSelect('select ID_EMPRESA, RAZAO_SOCIAL, NOME_FANTASIA from EMPRESA ' + pCriterio + ' order by razao_social');
   except on e : Exception do
       begin
           raise Exception.Create(e.Message);
       end;
   end;

end;

procedure TDaoEmpresa.Alterar(pEntidade: TModelEmpresa);
begin
   try

      pEntidade.Validar;

      FdbCommand.ExecutarSQL
         (
            'update EMPRESA set RAZAO_SOCIAL = ' + pEntidade.RazaoSocial.QuotedString + ', ' + sLineBreak +
            '    NOME_FANTASIA = ' + pEntidade.NomeFantasia.QuotedString + sLineBreak +
            'where (ID_EMPRESA = ' + pEntidade.IdEmpresa.ToString + ')'
         );
   except on e : Exception do
       begin
           raise Exception.Create(e.Message);
       end;
   end;

end;

procedure TDaoEmpresa.Excluir(pId: integer);
begin

end;

procedure TDaoEmpresa.Inserir(pEntidade: TModelEmpresa);
begin
   try
      pEntidade.Validar;

      FdbCommand.ExecutarSelect('insert into EMPRESA (RAZAO_SOCIAL, NOME_FANTASIA)' + sLineBreak +
                                'values (' + pEntidade.RazaoSocial.QuotedString+ ', ' + pEntidade.NomeFantasia.QuotedString +')');
   except on e : Exception do
       begin
           raise Exception.Create(e.Message);
       end;
   end;
end;

function TDaoEmpresa.Listar(pEntidade: TModelEmpresa): TDataSet;
begin

end;

end.
