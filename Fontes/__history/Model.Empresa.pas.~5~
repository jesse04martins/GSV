unit Model.Empresa;

interface

uses System.SysUtils;

type
  TModelEmpresa = class
  private
    FIdEmpresa: integer;
    FRazaoSocial: string;
    FNomeFantasia: string;

  public
    constructor Create; overload;
    constructor Create(AIdEmpresa : Integer; ARazaoSocial, ANomeFantasia : string); overload;
    property IdEmpresa: integer  read FIdEmpresa write FIdEmpresa;
    property RazaoSocial: string read FRazaoSocial write FRazaoSocial;
    property NomeFantasia: string read FNomeFantasia write FNomeFantasia;
    function Validar : Boolean;
  end;

implementation

{ TModelEmpresa }


{ TModelEmpresa }

constructor TModelEmpresa.Create;
begin

end;

constructor TModelEmpresa.Create(AIdEmpresa: Integer; ARazaoSocial, ANomeFantasia: string);
begin
   FIdEmpresa    := AIdEmpresa;
   FRazaoSocial  := ARazaoSocial;
   FNomeFantasia := ANomeFantasia;
end;

function TModelEmpresa.Validar: Boolean;
begin
   Result := False;

   if (FRazaoSocial.IsEmpty) then
       raise Exception.Create('Razão social é obrigatório!');

   if (FNomeFantasia.IsEmpty) then
       raise Exception.Create('Nome de fsntasia é obrigatório!');

   Result := True;
end;

end.
